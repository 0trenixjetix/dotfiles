[Start emacs] cd ~ && emacs &!
[Make histogram] sort ${File} | uniq -c | sort -nr
[Remove duplicates] sort ${File} | uniq
[Pick up specific line] head -n ${line_num} | tail -n 1
[Search term in files in current directory recursively] ag -G ${fname_regex:-'.*'} ${term} ${dest_dir:-.}
[Copy files with specific extension] ag -g '.*\.${ext}' ${src_dir:-.} | xargs -I% cp -f % ${dest_dir}
[Copy files with specific extension] find ${src_dir:-.} -name "*.${ext}"  | xargs -I% cp -f % ${dest_dir}
[Check process] ps aux | grep ${process}
[Show path] echo $PATH | tr ":" "\n"!
[Count files in directory] \ls -F ${src_dir} | grep -v / | wc -l
[Count files in directory recursively] find . -type f | wc -l
[Count files in directory recursively] ag -g '.*' . | wc -l
[Sort directory in disk usage] du -h ${src_dir} | grep -E '^ *([1-9]?\.)?[0-9]+G' | sort -nr
[Process each file] for val in `find ./*`; do ${process_cmd}; done
[Process each file] for val in `ag -g '.*' .`; do ${process_cmd}; done
[Show today] date +%F!
[Delete recursively original file after resolving git conflict] find . -maxdepth ${mdep:-1} -type f -name "*.orig" -delete
[Delete backup files recursively] find . -maxdepth ${mdep:-1} -name "*.bak" -delete
[Copy specific files with directory structure] rsync -avz --include='*/' --include='*.${ext}' --exclude='*' ${src_dir} ${dest_dir}
[Copy specific files with directory structure over ssh] rsync -avz -e ssh --include='*/' --include='*.${ext}' --exclude='*' ${src_dir} ${dest_dir}
