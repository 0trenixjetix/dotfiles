[Start emacs] cd ~ && emacs &!
[Make histogram] sort ${File} | uniq -c | sort -nr
[Remove duplicates] sort ${File} | uniq
[Pick up specific line] head -n ${line_num} | tail -n 1
[Search term in files in current directory recursively] ag -G ${fname_regex:-'.*'} ${term} ${dest_dir:-.}
[Search files with specific extension] find ${src_dir:-.} -name "*.${ext}"
[Copy files with specific extension] ag -g '.*\.${ext}' ${src_dir:-.} | xargs -I% cp -f % ${dest_dir}
[Copy files with specific extension] find ${src_dir:-.} -name "*.${ext}"  | xargs -I% cp -f % ${dest_dir}
[Check process] ps aux | grep ${process}
[Show path] echo $PATH | tr ":" "\n"!
[Count files in directory] \ls -F ${src_dir} | grep -v / | wc -l
[Count files in directory recursively] find . -type f | wc -l
[Count files in directory recursively] ag -g '.*' . | wc -l
[Sort directory in disk usage] du -h ${src_dir} | sort -hr
[Process each file] for val in `find ./*`; do ${process_cmd}; done
[Process each file] for val in `ag -g '.*' .`; do ${process_cmd}; done
[Show today] date +%F!
[Delete recursively original file after resolving git conflict] find . -maxdepth ${mdep:-1} -type f -name "*.orig" -delete
[Delete backup files recursively] find . -maxdepth ${mdep:-1} -name "*.bak" -delete
[Copy specific files with directory structure] rsync -avz --include='*/' --include='*.${ext}' --exclude='*' ${src_dir} ${dest_dir}
[Copy specific files with directory structure over ssh] rsync -avz -e ssh --include='*/' --include='*.${ext}' --exclude='*' ${src_dir} ${dest_dir}
[Scan port] nc -uzv ${PublicIP} ${Port}
[Scan listening port on localhost] sudo lsof -i -P | grep "LISTEN"
[Scan private IP in LAN] sudo arp-scan -l
[Scan private IP] sudo nmap -sP ${IP/MASK}
[Monitoring] less +F ${File}
[Show login history] last | head -n ${num_lines:-20}
[Show public IP] curl httpbin.org/ip!
[Docker| Remove dangling images <none>:<none>] docker rmi $(docker images -f 'dangling=true' -q)
[Docker| Remove stopped/exited containers] docker rm $(docker ps -aq)
[Ansible| Encrypt string] echo -n 'Encrypting string: '; read -s secret; echo ''; echo -n ${secret} | ansible-vault encrypt; unset secret
[Update gitignore] echo "$(git status --porcelain | grep '^??' | cut -c4-)" >> .gitignore!
